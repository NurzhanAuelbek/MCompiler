{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nurzhan\\\\Desktop\\\\qwe\\\\Maral\\\\Compiler\\\\frontend\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport VideoBar from \"./VideoBar\";\nimport Editor from \"./Editor\";\nimport Footer from \"./Footer\";\nimport io from \"socket.io-client\";\nimport Peer from \"peerjs\";\nimport axios from \"axios\";\nimport \"../css/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst myPeer = new Peer(); // https://peaceful-depths-33963.herokuapp.com/\n// http://localhost:4000\n\nconst socket = io(\"http://localhost:4000\");\nconst peers = {};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: \"\",\n      stream: {},\n      peers: [],\n      mode: \"java\",\n      code: \"\",\n      input: \"\",\n      output: \"\",\n      status: \"RUN\"\n    };\n    this.handleVideoToggle = this.handleVideoToggle.bind(this);\n    this.handleAudioToggle = this.handleAudioToggle.bind(this);\n    this.handleChangeCode = this.handleChangeCode.bind(this);\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    this.handleChangeOutput = this.handleChangeOutput.bind(this);\n    this.handleRunClick = this.handleRunClick.bind(this);\n    this.handleChangeMode = this.handleChangeMode.bind(this);\n  }\n\n  componentDidMount() {\n    myPeer.on(\"open\", id => {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(stream => {\n        this.addUserIdAndStream(id, stream);\n        this.addVideoStream(id, stream, false);\n        socket.on(\"user-connected\", userId => {\n          this.connectToNewUser(userId, stream);\n          this.sendDatatoNewUser();\n        });\n        myPeer.on(\"call\", call => {\n          call.answer(stream);\n          call.on(\"stream\", userVideoStream => {\n            this.addVideoStream(call.peer, userVideoStream, false);\n          });\n          call.on(\"close\", () => {\n            const peers = this.state.peers;\n            var peersModified = peers.filter(peer => {\n              return peer.userId !== call.peer;\n            });\n            this.setState({\n              peers: peersModified\n            });\n          });\n          peers[call.peer] = call;\n        });\n        socket.emit(\"join-room\", this.props.roomId, id);\n        socket.on(\"receive code\", payload => {\n          this.updateCodeFromSockets(payload);\n        });\n        socket.on(\"receive input\", payload => {\n          this.updateInputFromSockets(payload);\n        });\n        socket.on(\"receive output\", payload => {\n          this.updateOutputFromSockets(payload);\n        });\n        socket.on(\"receive-data-for-new-user\", payload => {\n          this.updateStateFromSockets(payload);\n        });\n        socket.on(\"mode-change-receive\", payload => {\n          this.updateModeFromSockets(payload);\n        });\n      });\n    });\n    socket.on(\"user-disconnected\", userId => {\n      if (peers[userId]) peers[userId].close();\n    });\n  }\n\n  sendDatatoNewUser() {\n    socket.emit(\"data-for-new-user\", {\n      newCode: this.state.code,\n      newInput: this.state.input,\n      newOutput: this.state.output,\n      newMode: this.state.mode\n    });\n  }\n\n  updateStateFromSockets(payload) {\n    this.setState({\n      code: payload.newCode\n    });\n    this.setState({\n      input: payload.newInput\n    });\n    this.setState({\n      output: payload.newOutput\n    });\n    this.setState({\n      mode: payload.newMode\n    });\n  }\n\n  updateCodeFromSockets(payload) {\n    this.setState({\n      code: payload.newCode\n    });\n  }\n\n  updateInputFromSockets(payload) {\n    this.setState({\n      input: payload.newInput\n    });\n  }\n\n  updateOutputFromSockets(payload) {\n    this.setState({\n      output: payload.newOutput\n    });\n  }\n\n  updateModeFromSockets(payload) {\n    this.setState({\n      mode: payload.mode\n    });\n  }\n\n  connectToNewUser(userId, stream) {\n    const call = myPeer.call(userId, stream);\n    call.on(\"stream\", userVideoStream => {\n      this.addVideoStream(userId, userVideoStream, false);\n    });\n    call.on(\"close\", () => {\n      const peers = this.state.peers;\n      var peersModified = peers.filter(peer => {\n        return peer.userId !== userId;\n      });\n      this.setState({\n        peers: peersModified\n      });\n    });\n    peers[userId] = call;\n  }\n\n  addVideoStream(userId, stream, flag) {\n    if (userId === this.state.userId) {\n      stream.getVideoTracks()[0].enabled = false;\n      stream.getAudioTracks()[0].enabled = false;\n    }\n\n    const peers = this.state.peers;\n    peers.forEach(peer => {\n      if (peer.userId === userId) {\n        peer.stream = stream;\n        flag = true;\n      }\n    });\n    if (!flag) peers.push({\n      userId: userId,\n      stream: stream\n    });\n    this.setState({\n      peers: peers\n    });\n  }\n\n  addUserIdAndStream(userId, stream) {\n    this.setState({\n      userId: userId,\n      stream: stream\n    });\n  }\n\n  handleVideoToggle(userId) {\n    this.state.peers.forEach(peer => {\n      if (peer.userId === userId) {\n        const enabled = peer.stream.getVideoTracks()[0].enabled;\n        peer.stream.getVideoTracks()[0].enabled = !enabled;\n      }\n    });\n  }\n\n  handleAudioToggle(userId) {\n    this.state.peers.forEach(peer => {\n      if (peer.userId === userId) {\n        const enabled = peer.stream.getAudioTracks()[0].enabled;\n        peer.stream.getAudioTracks()[0].enabled = !enabled;\n      }\n    });\n  }\n\n  handleChangeCode(newCode) {\n    this.setState({\n      code: newCode\n    });\n    socket.emit(\"code change\", {\n      newCode: newCode\n    });\n  }\n\n  handleChangeInput(newInput) {\n    this.setState({\n      input: newInput\n    });\n    socket.emit(\"input change\", {\n      newInput: newInput\n    });\n  }\n\n  handleChangeOutput(newOutput) {\n    this.setState({\n      output: newOutput\n    });\n    socket.emit(\"output change\", {\n      newOutput: newOutput\n    });\n  }\n\n  handleRunClick() {\n    this.setState({\n      status: `RUNNING <i class=\"fas fa-spinner fa-spin\"></i>`\n    });\n    const params = {\n      source_code: this.state.code,\n      language: this.state.mode,\n      input: this.state.input,\n      api_key: \"guest\"\n    };\n    axios.post(`https://api.paiza.io/runners/create`, params).then(res => {\n      const query = new URLSearchParams({\n        id: res.data.id,\n        api_key: \"guest\"\n      });\n\n      var callback = (res, error) => {\n        this.setState({\n          status: \"RUN\"\n        }); // consume data\n\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        let output = \"\";\n        if (res.data.stdout) output += res.data.stdout;\n        if (res.data.stderr) output += res.data.stderr;\n        if (res.data.build_stderr) output += res.data.build_stderr;\n        this.handleChangeOutput(output);\n      };\n\n      request(10, callback);\n\n      function request(retries, callback) {\n        axios.get(`https://api.paiza.io/runners/get_details?${query.toString()}`).then(response => {\n          // request successful\n          if (response.data.status === \"completed\") {\n            // server done, deliver data to script to consume\n            callback(response);\n          } else {\n            if (retries > 0) {\n              request(--retries, callback);\n            } else {\n              // no retries left, calling callback with error\n              callback([], \"out of retries\");\n            }\n          }\n        }).catch(error => {\n          // ajax error occurred\n          // would be better to not retry on 404, 500 and other unrecoverable HTTP errors\n          // retry, if any retries left\n          if (retries > 0) {\n            request(--retries, callback);\n          } else {\n            // no retries left, calling callback with error\n            callback([], error);\n          }\n        });\n      }\n    });\n  }\n\n  handleChangeMode(mode) {\n    this.setState({\n      mode: mode\n    });\n    socket.emit(\"mode-change-send\", {\n      mode: mode\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        userId: this.state.userId,\n        stream: this.state.stream,\n        onVideoToggle: this.handleVideoToggle,\n        onAudioToggle: this.handleAudioToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VideoBar, {\n        peersStream: this.state.peers,\n        userId: this.state.userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        mode: this.state.mode,\n        code: this.state.code,\n        input: this.state.input,\n        output: this.state.output,\n        status: this.state.status,\n        onChangeCode: this.handleChangeCode,\n        onChangeInput: this.handleChangeInput,\n        onChangeOutput: this.handleChangeOutput,\n        handleRunClick: this.handleRunClick,\n        onChangeMode: this.handleChangeMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Nurzhan/Desktop/qwe/Maral/Compiler/frontend/src/components/App.jsx"],"names":["React","Component","Header","VideoBar","Editor","Footer","io","Peer","axios","myPeer","socket","peers","App","constructor","props","state","userId","stream","mode","code","input","output","status","handleVideoToggle","bind","handleAudioToggle","handleChangeCode","handleChangeInput","handleChangeOutput","handleRunClick","handleChangeMode","componentDidMount","on","id","navigator","mediaDevices","getUserMedia","video","audio","then","addUserIdAndStream","addVideoStream","connectToNewUser","sendDatatoNewUser","call","answer","userVideoStream","peer","peersModified","filter","setState","emit","roomId","payload","updateCodeFromSockets","updateInputFromSockets","updateOutputFromSockets","updateStateFromSockets","updateModeFromSockets","close","newCode","newInput","newOutput","newMode","flag","getVideoTracks","enabled","getAudioTracks","forEach","push","params","source_code","language","api_key","post","res","query","URLSearchParams","data","callback","error","console","stdout","stderr","build_stderr","request","retries","get","toString","response","catch","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport VideoBar from \"./VideoBar\";\nimport Editor from \"./Editor\";\nimport Footer from \"./Footer\";\nimport io from \"socket.io-client\";\nimport Peer from \"peerjs\";\nimport axios from \"axios\";\nimport \"../css/App.css\";\nconst myPeer = new Peer();\n// https://peaceful-depths-33963.herokuapp.com/\n// http://localhost:4000\nconst socket = io(\"http://localhost:4000\");\nconst peers = {};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: \"\",\n      stream: {},\n      peers: [],\n      mode: \"java\",\n      code: \"\",\n      input: \"\",\n      output: \"\",\n      status: \"RUN\",\n    };\n    this.handleVideoToggle = this.handleVideoToggle.bind(this);\n    this.handleAudioToggle = this.handleAudioToggle.bind(this);\n    this.handleChangeCode = this.handleChangeCode.bind(this);\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    this.handleChangeOutput = this.handleChangeOutput.bind(this);\n    this.handleRunClick = this.handleRunClick.bind(this);\n    this.handleChangeMode = this.handleChangeMode.bind(this);\n  }\n  componentDidMount() {\n    myPeer.on(\"open\", (id) => {\n      navigator.mediaDevices\n        .getUserMedia({\n          video: true,\n          audio: true,\n        })\n        .then((stream) => {\n          this.addUserIdAndStream(id, stream);\n          this.addVideoStream(id, stream, false);\n          socket.on(\"user-connected\", (userId) => {\n            this.connectToNewUser(userId, stream);\n            this.sendDatatoNewUser();\n          });\n          myPeer.on(\"call\", (call) => {\n            call.answer(stream);\n            call.on(\"stream\", (userVideoStream) => {\n              this.addVideoStream(call.peer, userVideoStream, false);\n            });\n            call.on(\"close\", () => {\n              const peers = this.state.peers;\n              var peersModified = peers.filter((peer) => {\n                return peer.userId !== call.peer;\n              });\n              this.setState({ peers: peersModified });\n            });\n            peers[call.peer] = call;\n          });\n          socket.emit(\"join-room\", this.props.roomId, id);\n          socket.on(\"receive code\", (payload) => {\n            this.updateCodeFromSockets(payload);\n          });\n          socket.on(\"receive input\", (payload) => {\n            this.updateInputFromSockets(payload);\n          });\n          socket.on(\"receive output\", (payload) => {\n            this.updateOutputFromSockets(payload);\n          });\n          socket.on(\"receive-data-for-new-user\", (payload) => {\n            this.updateStateFromSockets(payload);\n          });\n          socket.on(\"mode-change-receive\", (payload) => {\n            this.updateModeFromSockets(payload);\n          });\n        });\n    });\n    socket.on(\"user-disconnected\", (userId) => {\n      if (peers[userId]) peers[userId].close();\n    });\n  }\n  sendDatatoNewUser() {\n    socket.emit(\"data-for-new-user\", {\n      newCode: this.state.code,\n      newInput: this.state.input,\n      newOutput: this.state.output,\n      newMode: this.state.mode,\n    });\n  }\n  updateStateFromSockets(payload) {\n    this.setState({ code: payload.newCode });\n    this.setState({ input: payload.newInput });\n    this.setState({ output: payload.newOutput });\n    this.setState({ mode: payload.newMode });\n  }\n  updateCodeFromSockets(payload) {\n    this.setState({ code: payload.newCode });\n  }\n  updateInputFromSockets(payload) {\n    this.setState({ input: payload.newInput });\n  }\n  updateOutputFromSockets(payload) {\n    this.setState({ output: payload.newOutput });\n  }\n  updateModeFromSockets(payload) {\n    this.setState({ mode: payload.mode });\n  }\n  connectToNewUser(userId, stream) {\n    const call = myPeer.call(userId, stream);\n    call.on(\"stream\", (userVideoStream) => {\n      this.addVideoStream(userId, userVideoStream, false);\n    });\n    call.on(\"close\", () => {\n      const peers = this.state.peers;\n      var peersModified = peers.filter((peer) => {\n        return peer.userId !== userId;\n      });\n      this.setState({ peers: peersModified });\n    });\n    peers[userId] = call;\n  }\n\n  addVideoStream(userId, stream, flag) {\n    if (userId === this.state.userId) {\n      stream.getVideoTracks()[0].enabled = false;\n      stream.getAudioTracks()[0].enabled = false;\n    }\n    const peers = this.state.peers;\n    peers.forEach((peer) => {\n      if (peer.userId === userId) {\n        peer.stream = stream;\n        flag = true;\n      }\n    });\n    if (!flag) peers.push({ userId: userId, stream: stream });\n    this.setState({ peers: peers });\n  }\n\n  addUserIdAndStream(userId, stream) {\n    this.setState({ userId: userId, stream: stream });\n  }\n\n  handleVideoToggle(userId) {\n    this.state.peers.forEach((peer) => {\n      if (peer.userId === userId) {\n        const enabled = peer.stream.getVideoTracks()[0].enabled;\n        peer.stream.getVideoTracks()[0].enabled = !enabled;\n      }\n    });\n  }\n\n  handleAudioToggle(userId) {\n    this.state.peers.forEach((peer) => {\n      if (peer.userId === userId) {\n        const enabled = peer.stream.getAudioTracks()[0].enabled;\n        peer.stream.getAudioTracks()[0].enabled = !enabled;\n      }\n    });\n  }\n  handleChangeCode(newCode) {\n    this.setState({ code: newCode });\n    socket.emit(\"code change\", {\n      newCode: newCode,\n    });\n  }\n  handleChangeInput(newInput) {\n    this.setState({ input: newInput });\n    socket.emit(\"input change\", {\n      newInput: newInput,\n    });\n  }\n  handleChangeOutput(newOutput) {\n    this.setState({ output: newOutput });\n    socket.emit(\"output change\", {\n      newOutput: newOutput,\n    });\n  }\n  handleRunClick() {\n    this.setState({\n      status: `RUNNING <i class=\"fas fa-spinner fa-spin\"></i>`,\n    });\n    const params = {\n      source_code: this.state.code,\n      language: this.state.mode,\n      input: this.state.input,\n      api_key: \"guest\",\n    };\n    axios.post(`https://api.paiza.io/runners/create`, params).then((res) => {\n      const query = new URLSearchParams({\n        id: res.data.id,\n        api_key: \"guest\",\n      });\n      var callback = (res, error) => {\n        this.setState({ status: \"RUN\" });\n        // consume data\n        if (error) {\n          console.error(error);\n          return;\n        }\n        let output = \"\";\n        if (res.data.stdout) output += res.data.stdout;\n        if (res.data.stderr) output += res.data.stderr;\n        if (res.data.build_stderr) output += res.data.build_stderr;\n        this.handleChangeOutput(output);\n      };\n\n      request(10, callback);\n      function request(retries, callback) {\n        axios\n          .get(`https://api.paiza.io/runners/get_details?${query.toString()}`)\n          .then((response) => {\n            // request successful\n\n            if (response.data.status === \"completed\") {\n              // server done, deliver data to script to consume\n              callback(response);\n            } else {\n              if (retries > 0) {\n                request(--retries, callback);\n              } else {\n                // no retries left, calling callback with error\n                callback([], \"out of retries\");\n              }\n            }\n          })\n          .catch((error) => {\n            // ajax error occurred\n            // would be better to not retry on 404, 500 and other unrecoverable HTTP errors\n            // retry, if any retries left\n            if (retries > 0) {\n              request(--retries, callback);\n            } else {\n              // no retries left, calling callback with error\n              callback([], error);\n            }\n          });\n      }\n    });\n  }\n  handleChangeMode(mode) {\n    this.setState({ mode: mode });\n    socket.emit(\"mode-change-send\", { mode: mode });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header\n          userId={this.state.userId}\n          stream={this.state.stream}\n          onVideoToggle={this.handleVideoToggle}\n          onAudioToggle={this.handleAudioToggle}\n        />\n        <VideoBar peersStream={this.state.peers} userId={this.state.userId} />\n        <Editor\n          mode={this.state.mode}\n          code={this.state.code}\n          input={this.state.input}\n          output={this.state.output}\n          status={this.state.status}\n          onChangeCode={this.handleChangeCode}\n          onChangeInput={this.handleChangeInput}\n          onChangeOutput={this.handleChangeOutput}\n          handleRunClick={this.handleRunClick}\n          onChangeMode={this.handleChangeMode}\n        />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}