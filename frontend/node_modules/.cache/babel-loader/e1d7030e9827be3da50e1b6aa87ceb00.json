{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nurzhan\\\\Desktop\\\\Maral\\\\Compiler\\\\frontend\\\\src\\\\components\\\\VideoBar.jsx\";\nimport React, { Component } from \"react\";\nimport Video from \"./Video\";\nimport \"../css/VideoBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass VideoBar extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrollmenu\",\n      children: this.props.peersStream.map(peer => {\n        return /*#__PURE__*/_jsxDEV(Video, {\n          media: peer.stream,\n          height: 110,\n          width: 160,\n          muted: this.props.userId === peer.userId ? true : false\n        }, peer.userId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default VideoBar;","map":{"version":3,"sources":["C:/Users/Nurzhan/Desktop/Maral/Compiler/frontend/src/components/VideoBar.jsx"],"names":["React","Component","Video","VideoBar","render","props","peersStream","map","peer","stream","userId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,qBAAP;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACG,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA4BC,IAAD,IAAU;AACpC,4BACE,QAAC,KAAD;AAEE,UAAA,KAAK,EAAEA,IAAI,CAACC,MAFd;AAGE,UAAA,MAAM,EAAE,GAHV;AAIE,UAAA,KAAK,EAAE,GAJT;AAKE,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,MAAX,KAAsBF,IAAI,CAACE,MAA3B,GAAoC,IAApC,GAA2C;AALpD,WACOF,IAAI,CAACE,MADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAjB8B;;AAmBjC,eAAeP,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Video from \"./Video\";\nimport \"../css/VideoBar.css\";\n\nclass VideoBar extends Component {\n  render() {\n    return (\n      <div className=\"scrollmenu\">\n        {this.props.peersStream.map((peer) => {\n          return (\n            <Video\n              key={peer.userId}\n              media={peer.stream}\n              height={110}\n              width={160}\n              muted={this.props.userId === peer.userId ? true : false}\n            ></Video>\n          );\n        })}\n      </div>\n    );\n  }\n}\nexport default VideoBar;\n"]},"metadata":{},"sourceType":"module"}