{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nurzhan\\\\Desktop\\\\Maral\\\\Compiler\\\\frontend\\\\src\\\\components\\\\Editor.jsx\";\nimport React, { Component } from \"react\";\nimport ConfigBar from \"./ConfigBar\";\nimport AceEditor from \"react-ace\";\nimport SplitPane from \"react-split-pane\";\nimport { languageToEditorMode } from \"../config/mappings\";\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-rust\";\nimport \"ace-builds/src-noconflict/mode-kotlin\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/theme-solarized_dark\";\nimport \"ace-builds/src-noconflict/theme-dracula\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-eclipse\";\nimport \"ace-builds/src-noconflict/theme-tomorrow_night\";\nimport \"ace-builds/src-noconflict/theme-tomorrow_night_blue\";\nimport \"ace-builds/src-noconflict/theme-xcode\";\nimport \"ace-builds/src-noconflict/theme-ambiance\";\nimport \"ace-builds/src-noconflict/theme-solarized_light\";\nimport \"../css/Editor.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languages = Object.keys(languageToEditorMode);\nconst fontSizes = [\"8\", \"10\", \"12\", \"14\", \"16\", \"18\", \"20\", \"22\", \"24\", \"26\", \"28\", \"30\", \"32\"];\nconst themes = [\"monokai\", \"github\", \"solarized_dark\", \"dracula\", \"eclipse\", \"tomorrow_night\", \"tomorrow_night_blue\", \"xcode\", \"ambiance\", \"solarized_light\"].sort();\nvar lang;\nvar font;\nvar theme;\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: \"tomorrow_night_blue\",\n      fontSize: 16\n    };\n    let i = 0;\n    lang = languages.map(language => {\n      i++;\n      return {\n        key: \"\" + i,\n        text: language,\n        value: language\n      };\n    });\n    let j = 0;\n    font = fontSizes.map(fontSize => {\n      j++;\n      return {\n        key: \"\" + j,\n        text: fontSize,\n        value: fontSize\n      };\n    });\n    let k = 0;\n    theme = themes.map(theme => {\n      k++;\n      return {\n        key: \"\" + k,\n        text: theme,\n        value: theme\n      };\n    });\n    this.handleOnChange = this.handleOnChange.bind(this);\n  }\n\n  handleOnChange(e, data) {\n    if (data.placeholder === \"Theme\") {\n      this.setState({\n        theme: data.value\n      });\n    } else if (data.placeholder === \"Font Size\") {\n      this.setState({\n        fontSize: parseInt(data.value)\n      });\n    } else if (data.placeholder === \"Language\") {\n      this.props.onChangeMode(data.value);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ConfigBar, {\n        mode: this.props.mode,\n        status: this.props.status,\n        handleOnChange: this.handleOnChange,\n        languages: lang,\n        fontSizes: font,\n        themes: theme,\n        handleRunClick: () => this.props.handleRunClick()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SplitPane, {\n        split: \"vertical\",\n        minSize: 100,\n        maxSize: window.innerWidth - 50,\n        defaultSize: window.innerWidth * 0.5,\n        style: {\n          height: \"65vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"head\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text\",\n              children: \"\\u041A\\u043E\\u0434 \\u0436\\u0430\\u0437\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n            mode: this.props.mode,\n            theme: this.state.theme,\n            fontSize: this.state.fontSize,\n            value: this.props.code,\n            onChange: data => this.props.onChangeCode(data),\n            width: \"100vw\",\n            height: \"61.4vh\",\n            showGutter: true,\n            useWorker: false,\n            editorProps: {\n              $blockScrolling: false\n            },\n            setOptions: {\n              enableLiveAutocompletion: true,\n              enableSnippets: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"head\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text\",\n                children: \"INPUT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n              mode: \"text\",\n              theme: this.state.theme,\n              fontSize: this.state.fontSize,\n              value: this.props.input,\n              onChange: data => this.props.onChangeInput(data),\n              width: \"100vw\",\n              height: \"28vh\",\n              showGutter: true,\n              useWorker: false,\n              editorProps: {\n                $blockScrolling: false\n              },\n              setOptions: {\n                enableLiveAutocompletion: true,\n                enableSnippets: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"head\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text\",\n                children: \"OUTPUT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n              mode: \"text\",\n              theme: this.state.theme,\n              fontSize: this.state.fontSize,\n              value: this.props.output,\n              onChange: data => this.props.onChangeOutput(data),\n              width: \"100vw\",\n              height: \"32vh\",\n              readOnly: true,\n              showGutter: true,\n              useWorker: false,\n              editorProps: {\n                $blockScrolling: false\n              },\n              setOptions: {\n                enableLiveAutocompletion: true,\n                enableSnippets: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Editor;","map":{"version":3,"sources":["C:/Users/Nurzhan/Desktop/Maral/Compiler/frontend/src/components/Editor.jsx"],"names":["React","Component","ConfigBar","AceEditor","SplitPane","languageToEditorMode","languages","Object","keys","fontSizes","themes","sort","lang","font","theme","Editor","constructor","props","state","fontSize","i","map","language","key","text","value","j","k","handleOnChange","bind","e","data","placeholder","setState","parseInt","onChangeMode","render","mode","status","handleRunClick","window","innerWidth","height","code","onChangeCode","$blockScrolling","enableLiveAutocompletion","enableSnippets","input","onChangeInput","output","onChangeOutput"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ConfigBar from \"./ConfigBar\";\nimport AceEditor from \"react-ace\";\nimport SplitPane from \"react-split-pane\";\nimport { languageToEditorMode } from \"../config/mappings\";\nimport \"ace-builds/webpack-resolver\";\n\nimport \"ace-builds/src-noconflict/ext-language_tools\";\n\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-rust\";\nimport \"ace-builds/src-noconflict/mode-kotlin\";\n\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/theme-solarized_dark\";\nimport \"ace-builds/src-noconflict/theme-dracula\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-eclipse\";\nimport \"ace-builds/src-noconflict/theme-tomorrow_night\";\nimport \"ace-builds/src-noconflict/theme-tomorrow_night_blue\";\nimport \"ace-builds/src-noconflict/theme-xcode\";\nimport \"ace-builds/src-noconflict/theme-ambiance\";\nimport \"ace-builds/src-noconflict/theme-solarized_light\";\n\nimport \"../css/Editor.css\";\n\nconst languages = Object.keys(languageToEditorMode);\nconst fontSizes = [\n  \"8\",\n  \"10\",\n  \"12\",\n  \"14\",\n  \"16\",\n  \"18\",\n  \"20\",\n  \"22\",\n  \"24\",\n  \"26\",\n  \"28\",\n  \"30\",\n  \"32\",\n];\nconst themes = [\n  \"monokai\",\n  \"github\",\n  \"solarized_dark\",\n  \"dracula\",\n  \"eclipse\",\n  \"tomorrow_night\",\n  \"tomorrow_night_blue\",\n  \"xcode\",\n  \"ambiance\",\n  \"solarized_light\",\n].sort();\nvar lang;\nvar font;\nvar theme;\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: \"tomorrow_night_blue\",\n      fontSize: 16,\n    };\n    let i = 0;\n    lang = languages.map((language) => {\n      i++;\n      return { key: \"\" + i, text: language, value: language };\n    });\n    let j = 0;\n    font = fontSizes.map((fontSize) => {\n      j++;\n      return { key: \"\" + j, text: fontSize, value: fontSize };\n    });\n    let k = 0;\n    theme = themes.map((theme) => {\n      k++;\n      return { key: \"\" + k, text: theme, value: theme };\n    });\n    this.handleOnChange = this.handleOnChange.bind(this);\n  }\n  handleOnChange(e, data) {\n    if (data.placeholder === \"Theme\") {\n      this.setState({ theme: data.value });\n    } else if (data.placeholder === \"Font Size\") {\n      this.setState({ fontSize: parseInt(data.value) });\n    } else if (data.placeholder === \"Language\") {\n      this.props.onChangeMode(data.value);\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <ConfigBar\n          mode={this.props.mode}\n          status={this.props.status}\n          handleOnChange={this.handleOnChange}\n          languages={lang}\n          fontSizes={font}\n          themes={theme}\n          handleRunClick={() => this.props.handleRunClick()}\n        />\n        <SplitPane\n          split=\"vertical\"\n          minSize={100}\n          maxSize={window.innerWidth - 50}\n          defaultSize={window.innerWidth * 0.5}\n          style={{ height: \"65vh\" }}\n        >\n          <div>\n            <div className=\"head\">\n              <div className=\"text\">Код жазу</div>\n            </div>\n            <AceEditor\n              mode={this.props.mode}\n              theme={this.state.theme}\n              fontSize={this.state.fontSize}\n              value={this.props.code}\n              onChange={(data) => this.props.onChangeCode(data)}\n              width={\"100vw\"}\n              height={\"61.4vh\"}\n              showGutter={true}\n              useWorker={false}\n              editorProps={{ $blockScrolling: false }}\n              setOptions={{\n                enableLiveAutocompletion: true,\n                enableSnippets: true,\n              }}\n            />\n          </div>\n          <div>\n            <div>\n              <div className=\"head\">\n                <div className=\"text\">INPUT</div>\n              </div>\n              <AceEditor\n                mode={\"text\"}\n                theme={this.state.theme}\n                fontSize={this.state.fontSize}\n                value={this.props.input}\n                onChange={(data) => this.props.onChangeInput(data)}\n                width={\"100vw\"}\n                height={\"28vh\"}\n                showGutter={true}\n                useWorker={false}\n                editorProps={{ $blockScrolling: false }}\n                setOptions={{\n                  enableLiveAutocompletion: true,\n                  enableSnippets: true,\n                }}\n              />\n            </div>\n            <div>\n              <div className=\"head\">\n                <div className=\"text\">OUTPUT</div>\n              </div>\n              <AceEditor\n                mode={\"text\"}\n                theme={this.state.theme}\n                fontSize={this.state.fontSize}\n                value={this.props.output}\n                onChange={(data) => this.props.onChangeOutput(data)}\n                width={\"100vw\"}\n                height={\"32vh\"}\n                readOnly={true}\n                showGutter={true}\n                useWorker={false}\n                editorProps={{ $blockScrolling: false }}\n                setOptions={{\n                  enableLiveAutocompletion: true,\n                  enableSnippets: true,\n                }}\n              />\n            </div>\n          </div>\n        </SplitPane>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}